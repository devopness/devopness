/* eslint-disable */
/**
 * devopness API
 * Devopness API - Painless essential DevOps to everyone 
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import { Action } from './action';
import { ActionStatus } from './action-status';
import { Server } from './server';
import { SslCertificateIssuer } from './ssl-certificate-issuer';
import { SslCertificateType } from './ssl-certificate-type';
import { SslCertificateValidationLevel } from './ssl-certificate-validation-level';
import { User } from './user';

/**
 * 
 * @export
 * @interface SslCertificate
 */
export interface SslCertificate {
    /**
     * The unique id of the given record
     * @type {number}
     * @memberof SslCertificate
     */
    id: number;
    /**
     * The list of domain names to which the SSL certificate refers to
     * @type {Array<string>}
     * @memberof SslCertificate
     */
    domains: Array<string>;
    /**
     * 
     * @type {SslCertificateIssuer}
     * @memberof SslCertificate
     */
    issuer: SslCertificateIssuer;
    /**
     * 
     * @type {SslCertificateType}
     * @memberof SslCertificate
     */
    type: SslCertificateType;
    /**
     * 
     * @type {SslCertificateValidationLevel}
     * @memberof SslCertificate
     */
    validation_level: SslCertificateValidationLevel;
    /**
     * The private key provided by the Certification Authority, when the certificate has not been automatically issued through `devopness`
     * @type {string}
     * @memberof SslCertificate
     */
    custom_private_key?: string;
    /**
     * The contents of the certificate provided by the Certification Authority, when the certificate has not been automatically issued through `devopness`
     * @type {string}
     * @memberof SslCertificate
     */
    custom_certificate?: string;
    /**
     * 
     * @type {ActionStatus}
     * @memberof SslCertificate
     */
    status: ActionStatus;
    /**
     * Tells if the certificate is active for all linked servers and applications
     * @type {boolean}
     * @memberof SslCertificate
     */
    active: boolean;
    /**
     * The date and time when this certificate will no longer be valid, down to minute precision
     * @type {string}
     * @memberof SslCertificate
     */
    expires_at?: string | null;
    /**
     * The date and time when this certificate was renewed for the last time
     * @type {string}
     * @memberof SslCertificate
     */
    last_renewed_at?: string | null;
    /**
     * The date and time when the record was created
     * @type {string}
     * @memberof SslCertificate
     */
    created_at?: string;
    /**
     * The date and time when the record was last updated
     * @type {string}
     * @memberof SslCertificate
     */
    updated_at?: string;
    /**
     * 
     * @type {Array<Server>}
     * @memberof SslCertificate
     */
    servers?: Array<Server>;
    /**
     * 
     * @type {User}
     * @memberof SslCertificate
     */
    created_by_user?: User;
    /**
     * 
     * @type {Action}
     * @memberof SslCertificate
     */
    last_action?: Action | null;
}

