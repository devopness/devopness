/* eslint-disable */
/**
 * devopness API
 * Devopness API - Painless essential DevOps to everyone 
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { ApiBaseService } from "../../../services/ApiBaseService";
import { ApiResponse } from "../../../common/ApiResponse";
import { ArgumentNullException } from "../../../common/Exceptions";
import { Log } from '../../generated/models';

/**
 * LogsApiService - Auto-generated
 */
export class LogsApiService extends ApiBaseService {
    /**
     * 
     * @summary Get log of a deployment step
     * @param {number} deploymentId Numeric ID of the deployment to which the step belongs to
     * @param {number} deploymentStepId Relative order number of the deployment step
     */
    public async getDeploymentStepLog(deploymentId: number, deploymentStepId: number): Promise<ApiResponse<Log>> {
        if (deploymentId === null || deploymentId === undefined) {
            throw new ArgumentNullException('deploymentId', 'getDeploymentStepLog');
        }
        if (deploymentStepId === null || deploymentStepId === undefined) {
            throw new ArgumentNullException('deploymentStepId', 'getDeploymentStepLog');
        }
        const queryString = [].join('&');
        const requestUrl = '/logs/deployments/{deployment_id}/steps/{deployment_step_id}' + (queryString? `?${queryString}` : '');

        const response = await this.get <Log>(requestUrl.replace(`{${"deployment_id"}}`, encodeURIComponent(String(deploymentId))).replace(`{${"deployment_step_id"}}`, encodeURIComponent(String(deploymentStepId))));
        return new ApiResponse(response);
    }
}
