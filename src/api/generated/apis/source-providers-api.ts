/* eslint-disable */
/**
 * devopness API
 * Devopness API - Painless essential DevOps to everyone 
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { ApiBaseService } from "../../../services/ApiBaseService";
import { ApiResponse } from "../../../common/ApiResponse";
import { ArgumentNullException } from "../../../common/Exceptions";
import { SocialAccount } from '../../generated/models';

/**
 * SourceProvidersApiService - Auto-generated
 */
export class SourceProvidersApiService extends ApiBaseService {
    /**
     * 
     * @summary Delete a given source provider from current user\'s account
     * @param {number} id Unique Id of the source provider to be deleted
     */
    public async deleteSourceProvider(id: number): Promise<ApiResponse<void>> {
        if (id === null || id === undefined) {
            throw new ArgumentNullException('id', 'deleteSourceProvider');
        }
        const response = await this.delete <void>(`/source-providers/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(id))));
        return new ApiResponse(response);
    }

    /**
     * 
     * @summary Return a list of all source code providers linked to current user
     */
    public async getAllSourceProviders(): Promise<ApiResponse<Array<SocialAccount>>> {
        const response = await this.get <Array<SocialAccount>>(`/source-providers`);
        return new ApiResponse(response);
    }

    /**
     * 
     * @summary Get details of a source code provider, by its name
     * @param {string} provider Unique name/Id of the provider to be retrieved
     */
    public async getSourceProviderByName(provider: string): Promise<ApiResponse<SocialAccount>> {
        if (provider === null || provider === undefined) {
            throw new ArgumentNullException('provider', 'getSourceProviderByName');
        }
        const response = await this.get <SocialAccount>(`/source-providers/{provider}`.replace(`{${"provider"}}`, encodeURIComponent(String(provider))));
        return new ApiResponse(response);
    }
}
