/* eslint-disable */
/**
 * devopness API
 * Devopness API - Painless essential DevOps to everyone 
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { ApiBaseService } from "../../../services/ApiBaseService";
import { ApiResponse } from "../../../common/ApiResponse";
import { ArgumentNullException } from "../../../common/Exceptions";
import { Deployment } from '../../generated/models';

/**
 * DeploymentsApiService - Auto-generated
 */
export class DeploymentsApiService extends ApiBaseService {
    /**
     * 
     * @summary Get a deployment by ID
     * @param {number} deploymentId Numeric ID of the deployment to get
     */
    public async getDeployment(deploymentId: number): Promise<ApiResponse<Deployment>> {
        if (deploymentId === null || deploymentId === undefined) {
            throw new ArgumentNullException('deploymentId', 'getDeployment');
        }
        const queryString = [].join('&');
        const requestUrl = '/deployments/{deployment_id}' + (queryString? `?${queryString}` : '');

        const response = await this.get <Deployment>(requestUrl.replace(`{${"deployment_id"}}`, encodeURIComponent(String(deploymentId))));
        return new ApiResponse(response);
    }
}
