[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[project]
name = "devopness"
version = "0.0.0"
description = "Devopness API Python SDK - Painless essential DevOps to everyone"
license = "MIT"
readme = "README.md"
requires-python = ">=3.11"
authors = [{ name = "Devopness (https://www.devopness.com)" }]
keywords = [
  "API Client",
  "Cloud Engineering",
  "Cloud Infrastructure",
  "Cloud Platform",
  "Cloud Resource Management",
  "Configuration Management",
  "Deployment Automation",
  "Devopness",
  "DevOps",
  "Infrastructure as Code",
  "Platform Engineering",
  "Python SDK",
  "Server Management",
  "Server Provisioning",
  "Zero Downtime Deployment",
]
classifiers = [
  "Development Status :: 2 - Pre-Alpha",
  "Environment :: Console",
  "Framework :: Pydantic",
  "Intended Audience :: Developers",
  "Intended Audience :: System Administrators",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: Software Development",
  "Topic :: Software Development :: Libraries",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Topic :: System :: Systems Administration",
  "Topic :: Utilities",
]
dependencies = ["httpx (>=0.28.1,<0.29.0)", "pydantic (>=2.11.3,<3.0.0)"]

[project.urls]
homepage = "https://www.devopness.com"
repository = "https://github.com/devopness/devopness"

[tool.poetry]
packages = [
  { include = "devopness/__init__.py" },
  { include = "devopness/py.typed" },
  { include = "devopness/_client.py" },
  { include = "devopness/_client_config.py" },
  { include = "devopness/core.py" },
  { include = "devopness/models.py" },
  { include = "devopness/services.py" },
  { include = "devopness/_base/*.py" },
  { include = "devopness/_core/*.py" },
  { include = "devopness/_services/*.py" },
  { include = "devopness/_generated/*.py" },
  { include = "devopness/_generated/api/*.py" },
  { include = "devopness/_generated/models/*.py" },
]

[tool.poetry.group.dev.dependencies]
ruff = "^0.11.6"
openapi-generator-cli = { version = "^7.12.0", markers = "python_version < '4.0'" }

[tool.ruff]
line-length = 88
target-version = "py311"

[tool.ruff.lint]
preview = true

extend-select = [
  "A",    # flake8-builtins (avoid shadowing built-ins)
  "ANN",  # flake8-annotations (type hints for public APIs)
  "B",    # flake8-bugbear (common bugs and best practices)
  "C4",   # flake8-comprehensions
  "COM",  # flake8-commas
  "D",    # pydocstyle (docstring conventions)
  "E",    # pycodestyle (PEP8)
  "F",    # pyflakes (basic errors)
  "I",    # isort (import sorting)
  "N",    # pep8-naming
  "PERF", # perflint (performance suggestions)
  "PIE",  # flake8-pie (extra cleanups)
  "Q",    # flake8-quotes (quote consistency)
  "RET",  # flake8-return (return statement rules)
  "RUF",  # Ruff-specific rules
  "S",    # flake8-bandit (security rules)
  "SIM",  # flake8-simplify
  "UP",   # pyupgrade (modern Python syntax)
  "W",    # pycodestyle (continued)
]

ignore = [
  "COM812",  # Trailing comma missing
  "D200",    # One-line docstring should fit on one line
  "D203",    # 1 blank line required before class docstring
  "D205",    # 1 blank line required between summary and description
  "D212",    # Multi-line docstring summary should start at the first line
  "D400",    # First line should end with a period
  "D401",    # First line should be in imperative mood
  "D413",    # Missing blank line after last section
  "D415",    # First line should end with a period, question mark, or exclamation point
  "PERF401", # Use `list.extend` to create a transformed list
  "UP007",   # Use `X | Y` for type annotations
  "UP045",   # Use `X | None` for type annotations
]

[tool.ruff.lint.per-file-ignores]
"devopness/_generated/**/*" = [
  "COM812", # Trailing comma missing
  "E501",   # Line too long
  "UP006",  # Use `list` instead of `List` for type annotation
  "UP035",  # Import from `typing` instead: `Annotated`
  "UP042",  # Class inherits from both `str` and `enum.Enum`
]
"devopness/_generated/**/__init__.py" = [
  "F401", # Module imported but unused
]
"scripts/**/*" = [
  "ANN",  # flake8-annotations
  "D",    # pydocstyle
  "S404", # `subprocess` module is possibly insecure
  "S602", # `subprocess` call with `shell=True` identified, security issue
]
"tests/**/*" = [
  "ANN",    # flake8-annotations
  "COM812", # Trailing comma missing
  "D",      # pydocstyle
  "E501",   # Line too long
  "S101",   # Use of `assert` detected
]

[tool.ruff.lint.isort]
known-first-party = ["devopness"]
case-sensitive = true
