"""
Devopness API Python SDK - Painless essential DevOps to everyone

Note:
    This is auto generated by OpenAPI Generator.
    https://openapi-generator.tech
"""

from typing import (
    Required,
    TypedDict,
    Union,
)

from .. import DevopnessBaseModel
from .action_relation import ActionRelation, ActionRelationPlain
from .application_relation import ApplicationRelation, ApplicationRelationPlain
from .ssl_certificate_relation import (
    SslCertificateRelation,
    SslCertificateRelationPlain,
)
from .user_relation import UserRelation, UserRelationPlain
from .virtual_host_type import VirtualHostType, VirtualHostTypePlain


class VirtualHost(DevopnessBaseModel):
    """
    VirtualHost

    Attributes:
        id (int): Unique ID of the Virtual Host
        type (VirtualHostType):
        type_human_readable (str): The human readable version of the type
        name (str): The name of the Virtual Host
        application (ApplicationRelation):
        root_directory (str): The document root location, within the application directory, that contains the public files to be served when a user visits the domain name associated with this virtual host
        application_listen_address (str): The network name or IP address on which the application linked to this virtual host is configured to listen for incoming requests. A valid address has &#x60;http&#x60; or &#x60;https&#x60; protocol, a domain name or IP address, an optional port and optional path. You can also specify a UNIX-socket using &#x60;unix:&#x60; protocol. Examples: &#x60;http://127.0.0.1:8080&#x60; (for applications exposing port &#x60;8080&#x60;, for example running in a Docker container), &#x60;http://127.0.0.1:3000&#x60; (for applications kept alive by a daemon/background process that listens on port &#x60;3000&#x60;), &#x60;unix:/var/run/example.sock&#x60; (for applications listening on a custom socket)
        ssl_certificate (SslCertificateRelation):
        last_action (ActionRelation):
        created_by_user (UserRelation):
        created_at (str): The date and time when the record was created
        updated_at (str): The date and time when the record was updated
    """

    id: int
    type: VirtualHostType
    type_human_readable: str
    name: str
    application: ApplicationRelation
    root_directory: str
    application_listen_address: str
    ssl_certificate: SslCertificateRelation
    last_action: ActionRelation
    created_by_user: UserRelation
    created_at: str
    updated_at: str


class VirtualHostPlain(TypedDict, total=False):
    """
    Plain version of VirtualHost.
    """

    id: Required[int]
    type: Required[
        Union[
            VirtualHostType,
            VirtualHostTypePlain,
        ]
    ]
    type_human_readable: Required[str]
    name: Required[str]
    application: Required[
        Union[
            ApplicationRelation,
            ApplicationRelationPlain,
        ]
    ]
    root_directory: Required[str]
    application_listen_address: Required[str]
    ssl_certificate: Required[
        Union[
            SslCertificateRelation,
            SslCertificateRelationPlain,
        ]
    ]
    last_action: Required[
        Union[
            ActionRelation,
            ActionRelationPlain,
        ]
    ]
    created_by_user: Required[
        Union[
            UserRelation,
            UserRelationPlain,
        ]
    ]
    created_at: Required[str]
    updated_at: Required[str]
