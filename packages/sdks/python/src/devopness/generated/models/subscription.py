"""
Devopness API Python SDK - Painless essential DevOps to everyone

Note:
    This is auto generated by OpenAPI Generator.
    https://openapi-generator.tech
"""

from datetime import datetime
from typing import (
    List,
    Optional,
    Required,
    TypedDict,
    Union,
)

from pydantic import Field, StrictFloat, StrictInt, StrictStr

from .. import DevopnessBaseModel
from .subscription_balance import SubscriptionBalance, SubscriptionBalancePlain


class Subscription(DevopnessBaseModel):
    """
    Subscription

    Attributes:
        id (int): The ID of the subscription
        user_id (int): The ID of the user this subscription belongs to
        plan_name (str): The plan name of this subscription
        status (str): Status of this subscription
        quantity (int): Amount of plans purchased in this subscription
        price_unit (float): Unitary price of the subscribed plan
        price_total (float): Total price of this subscription (quantity x price_unit)
        price_currency (str): Currency of the prices
        cancelled_at (datetime, optional): If not null, indicates the date when this subscription was cancelled
        ends_at (datetime): Indicates the date and time when this subscription ends
        created_at (datetime): The date and time when the record was created
        updated_at (datetime): The date and time when the record was last updated
        current_balance (SubscriptionBalance, optional):
        balances (List[SubscriptionBalance]): The list of subscription balances
    """

    id: Optional[StrictInt] = Field(
        default=None, description="The ID of the subscription"
    )
    user_id: Optional[StrictInt] = Field(
        default=None, description="The ID of the user this subscription belongs to"
    )
    plan_name: Optional[StrictStr] = Field(
        default=None, description="The plan name of this subscription"
    )
    status: Optional[StrictStr] = Field(
        default=None, description="Status of this subscription"
    )
    quantity: Optional[StrictInt] = Field(
        default=None, description="Amount of plans purchased in this subscription"
    )
    price_unit: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, description="Unitary price of the subscribed plan"
    )
    price_total: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None,
        description="Total price of this subscription (quantity x price_unit)",
    )
    price_currency: Optional[StrictStr] = Field(
        default=None, description="Currency of the prices"
    )
    cancelled_at: Optional[datetime] = Field(
        default=None,
        description="If not null, indicates the date when this subscription was cancelled",
    )
    ends_at: Optional[datetime] = Field(
        default=None,
        description="Indicates the date and time when this subscription ends",
    )
    created_at: Optional[datetime] = Field(
        default=None, description="The date and time when the record was created"
    )
    updated_at: Optional[datetime] = Field(
        default=None, description="The date and time when the record was last updated"
    )
    current_balance: Optional[SubscriptionBalance] = None
    balances: Optional[List[Optional[SubscriptionBalance]]] = Field(
        default=None, description="The list of subscription balances"
    )


class SubscriptionPlain(TypedDict, total=False):
    """
    Plain version of Subscription

    Attributes:
        id (int): The ID of the subscription
        user_id (int): The ID of the user this subscription belongs to
        plan_name (str): The plan name of this subscription
        status (str): Status of this subscription
        quantity (int): Amount of plans purchased in this subscription
        price_unit (float): Unitary price of the subscribed plan
        price_total (float): Total price of this subscription (quantity x price_unit)
        price_currency (str): Currency of the prices
        cancelled_at (datetime, optional): If not null, indicates the date when this subscription was cancelled
        ends_at (datetime): Indicates the date and time when this subscription ends
        created_at (datetime): The date and time when the record was created
        updated_at (datetime): The date and time when the record was last updated
        current_balance (SubscriptionBalance, optional):
        balances (List[SubscriptionBalance]): The list of subscription balances
    """

    id: Required[int]
    user_id: Required[int]
    plan_name: Required[str]
    status: Required[str]
    quantity: Required[int]
    price_unit: Required[float]
    price_total: Required[float]
    price_currency: Required[str]
    cancelled_at: Optional[datetime]
    ends_at: Required[datetime]
    created_at: Required[datetime]
    updated_at: Required[datetime]
    current_balance: Optional[
        Union[
            SubscriptionBalance,
            SubscriptionBalancePlain,
        ]
    ]
    balances: Required[
        List[
            Union[
                SubscriptionBalance,
                SubscriptionBalancePlain,
            ]
        ]
    ]
