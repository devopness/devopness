/* eslint-disable */
/**
 * devopness API
 * Devopness API - Painless essential DevOps to everyone 
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { ApiBaseService } from "../../../services/ApiBaseService";
import { ApiResponse } from "../../../common/ApiResponse";
import { ArgumentNullException } from "../../../common/Exceptions";
import { ApiError } from '../../generated/models';
import { Role } from '../../generated/models';
import { RoleCreate } from '../../generated/models';

/**
 * ProjectsRolesApiService - Auto-generated
 */
export class ProjectsRolesApiService extends ApiBaseService {
    /**
     * 
     * @summary Create a role to a given project
     * @param {number} projectId The project numeric ID
     * @param {RoleCreate} roleCreate A JSON object containing server data
     */
    public async addRoleToProject(projectId: number, roleCreate: RoleCreate): Promise<ApiResponse<Role>> {
        if (projectId === null || projectId === undefined) {
            throw new ArgumentNullException('projectId', 'addRoleToProject');
        }
        if (roleCreate === null || roleCreate === undefined) {
            throw new ArgumentNullException('roleCreate', 'addRoleToProject');
        }
        
        let queryString = '';

        const requestUrl = '/projects/{project_id}/roles' + (queryString? `?${queryString}` : '');

        const response = await this.post <Role, RoleCreate>(requestUrl.replace(`{${"project_id"}}`, encodeURIComponent(String(projectId))), roleCreate);
        return new ApiResponse(response);
    }

    /**
     * 
     * @summary List all roles from a project
     * @param {number} projectId The project numeric ID
     */
    public async listProjectRoles(projectId: number): Promise<ApiResponse<Array<Role>>> {
        if (projectId === null || projectId === undefined) {
            throw new ArgumentNullException('projectId', 'listProjectRoles');
        }
        
        let queryString = '';

        const requestUrl = '/projects/{project_id}/roles' + (queryString? `?${queryString}` : '');

        const response = await this.get <Array<Role>>(requestUrl.replace(`{${"project_id"}}`, encodeURIComponent(String(projectId))));
        return new ApiResponse(response);
    }
}
