/* eslint-disable */
/**
 * devopness API
 * Devopness API - Painless essential DevOps to everyone 
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { ApiBaseService } from "../../../services/ApiBaseService";
import { ApiResponse } from "../../../common/ApiResponse";
import { ArgumentNullException } from "../../../common/Exceptions";
import { ApiError } from '../../generated/models';

/**
 * InvitationsApiService - Auto-generated
 */
export class InvitationsApiService extends ApiBaseService {
    /**
     * 
     * @summary Accept a pending invitation
     * @param {string} invitationId UUID of the invitation to be accepted
     * @param {string} token The token of the invitation to be accepted
     */
    public async acceptInvitation(invitationId: string, token: string): Promise<ApiResponse<void>> {
        if (invitationId === null || invitationId === undefined) {
            throw new ArgumentNullException('invitationId', 'acceptInvitation');
        }
        if (token === null || token === undefined) {
            throw new ArgumentNullException('token', 'acceptInvitation');
        }
        
        let queryString = '';

        const requestUrl = '/invitations/{invitation_id}/accept/{token}' + (queryString? `?${queryString}` : '');

        const response = await this.post <void>(requestUrl.replace(`{${"invitation_id"}}`, encodeURIComponent(String(invitationId))).replace(`{${"token"}}`, encodeURIComponent(String(token))));
        return new ApiResponse(response);
    }
}
