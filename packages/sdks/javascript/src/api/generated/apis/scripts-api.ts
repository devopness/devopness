/* eslint-disable */
/**
 * devopness API
 * Devopness API - Painless essential DevOps to everyone 
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { ApiBaseService } from "../../../services/ApiBaseService";
import { ApiResponse } from "../../../common/ApiResponse";
import { ArgumentNullException } from "../../../common/Exceptions";
import { Script } from '../../generated/models';

/**
 * ScriptsApiService - Auto-generated
 */
export class ScriptsApiService extends ApiBaseService {
    /**
     * 
     * @summary Get a script by ID
     * @param {number} scriptId The unique id of the script
     */
    public async getScript(scriptId: number): Promise<ApiResponse<Script>> {
        if (scriptId === null || scriptId === undefined) {
            throw new ArgumentNullException('scriptId', 'getScript');
        }
        
        let queryString = '';

        const requestUrl = '/scripts/{script_id}' + (queryString? `?${queryString}` : '');

        const response = await this.get <Script>(requestUrl.replace(`{${"script_id"}}`, encodeURIComponent(String(scriptId))));
        return new ApiResponse(response);
    }
}
