/* eslint-disable */
/**
 * devopness API
 * Devopness API - Painless essential DevOps to everyone 
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { ApiBaseService } from "../../../services/ApiBaseService";
import { ApiResponse } from "../../../common/ApiResponse";
import { ArgumentNullException } from "../../../common/Exceptions";
import { ApiError } from '../../generated/models';
import { Team } from '../../generated/models';
import { TeamCreate } from '../../generated/models';

/**
 * ProjectsTeamsApiService - Auto-generated
 */
export class ProjectsTeamsApiService extends ApiBaseService {
    /**
     * 
     * @summary Create a team to the given project
     * @param {number} projectId The numeric project ID
     * @param {TeamCreate} teamCreate A JSON object containing team data
     */
    public async addTeam(projectId: number, teamCreate: TeamCreate): Promise<ApiResponse<Team>> {
        if (projectId === null || projectId === undefined) {
            throw new ArgumentNullException('projectId', 'addTeam');
        }
        if (teamCreate === null || teamCreate === undefined) {
            throw new ArgumentNullException('teamCreate', 'addTeam');
        }
        
        let queryString = '';

        const requestUrl = '/projects/{project_id}/teams' + (queryString? `?${queryString}` : '');

        const response = await this.post <Team, TeamCreate>(requestUrl.replace(`{${"project_id"}}`, encodeURIComponent(String(projectId))), teamCreate);
        return new ApiResponse(response);
    }
}
