/* eslint-disable */
/**
 * devopness API
 * Devopness API - Painless essential DevOps to everyone 
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { ApiBaseService } from "../../../services/ApiBaseService";
import { ApiResponse } from "../../../common/ApiResponse";
import { ArgumentNullException } from "../../../common/Exceptions";
import { ApiError } from '../../generated/models';
import { NetworkRule } from '../../generated/models';
import { NetworkRuleUpdate } from '../../generated/models';

/**
 * NetworkRulesApiService - Auto-generated
 */
export class NetworkRulesApiService extends ApiBaseService {
    /**
     * 
     * @summary Delete a given Network Rule
     * @param {number} networkRuleId The ID of the network rule.
     */
    public async deleteNetworkRule(networkRuleId: number): Promise<ApiResponse<void>> {
        if (networkRuleId === null || networkRuleId === undefined) {
            throw new ArgumentNullException('networkRuleId', 'deleteNetworkRule');
        }

        let queryString = '';

        const requestUrl = '/network-rules/{network_rule_id}' + (queryString? `?${queryString}` : '');

        const response = await this.delete <void>(requestUrl.replace(`{${"network_rule_id"}}`, encodeURIComponent(String(networkRuleId))));
        return new ApiResponse(response);
    }

    /**
     * 
     * @summary Get a Network Rule by ID
     * @param {number} networkRuleId The ID of the network rule.
     */
    public async getNetworkRule(networkRuleId: number): Promise<ApiResponse<NetworkRule>> {
        if (networkRuleId === null || networkRuleId === undefined) {
            throw new ArgumentNullException('networkRuleId', 'getNetworkRule');
        }

        let queryString = '';

        const requestUrl = '/network-rules/{network_rule_id}' + (queryString? `?${queryString}` : '');

        const response = await this.get <NetworkRule>(requestUrl.replace(`{${"network_rule_id"}}`, encodeURIComponent(String(networkRuleId))));
        return new ApiResponse(response);
    }

    /**
     * 
     * @summary Update an existing Network Rule
     * @param {number} networkRuleId The ID of the network rule.
     * @param {NetworkRuleUpdate} networkRuleUpdate A JSON object containing the resource data
     */
    public async updateNetworkRule(networkRuleId: number, networkRuleUpdate: NetworkRuleUpdate): Promise<ApiResponse<void>> {
        if (networkRuleId === null || networkRuleId === undefined) {
            throw new ArgumentNullException('networkRuleId', 'updateNetworkRule');
        }
        if (networkRuleUpdate === null || networkRuleUpdate === undefined) {
            throw new ArgumentNullException('networkRuleUpdate', 'updateNetworkRule');
        }

        let queryString = '';

        const requestUrl = '/network-rules/{network_rule_id}' + (queryString? `?${queryString}` : '');

        const response = await this.put <void, NetworkRuleUpdate>(requestUrl.replace(`{${"network_rule_id"}}`, encodeURIComponent(String(networkRuleId))), networkRuleUpdate);
        return new ApiResponse(response);
    }
}
