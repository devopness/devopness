name: Release - Packages

on:
  workflow_dispatch:
  push:
    # paths:
    #   - packages/**/src/**
    #   - packages/**/package.json
    # branches:
    #   - main
    #   - "*.x" # maintenance releases

permissions:
  contents: write
  pull-requests: write

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  detect-changes:
    name: Detect changes in packages
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      npm-changes: ${{ steps.npm-filter.outputs.changes }}
      pypi-changes: ${{ steps.pypi-filter.outputs.changes }}
    steps:
      - uses: dorny/paths-filter@v3
        id: npm-filter
        with:
          filters: |
            changes:
              - 'packages/sdks/javascript/**'
              - 'packages/ui/react/**'

      - uses: dorny/paths-filter@v3
        id: pypi-filter
        with:
          filters: |
            changes:
              - 'packages/sdks/python/**'

  release-npm-packages:
    name: Release NPM Packages
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.npm-changes == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "22.x"
      - run: npm ci --ignore-scripts
      - name: Create Release Pull Request or Publish Packages
        uses: changesets/action@v1
        with:
          title: "chore: version packages"
          publish: npx changeset publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  release-pypi-packages:
    name: Release PyPI Packages
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.pypi-changes == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry

      - name: Run TestPyPi Publish script
        working-directory: packages/sdks/python
        run: bash scripts/publish-dev.sh
        env:
          POETRY_TEST_PYPI_TOKEN: ${{ secrets.POETRY_TEST_PYPI_TOKEN }}
